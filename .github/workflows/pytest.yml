# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: pytest

on:
  push:
    branches: ["master", "release-*"]
  pull_request:
    branches: ["master", "release-*"]

# We want an ongoing run of this workflow to be canceled by a later commit
# so that there is only one concurrent run of this workflow for each branch
concurrency:
  group: pytest-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  integration-tests:
    name: ${{ matrix.test-markers }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test-markers:
          - "integration_tests_x"

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.LUDWIG_TESTS_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.LUDWIG_TESTS_AWS_SECRET_ACCESS_KEY }}
      KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
      KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
      IS_NOT_FORK: ${{ !(github.event.pull_request.base.repo.full_name == 'ludwig-ai/ludwig' && github.event.pull_request.head.repo.fork) }}
      MARKERS: ${{ matrix.test-markers }}

    services:
      minio:
        image: fclairamb/minio-github-actions
        env:
          MINIO_ACCESS_KEY: minio
          MINIO_SECRET_KEY: minio123
        ports:
          - 9000:9000

    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Setup Linux
        if: runner.os == 'linux'
        run: |
          sudo apt-get update && sudo apt-get install -y cmake libsndfile1

      - name: Setup macOS
        if: runner.os == 'macOS'
        run: |
          brew install libuv

      - name: Install dependencies
        run: |
          python --version
          pip --version
          python -m pip install -U pip

          # remove torch and ray from the dependencies so we can add them depending on the matrix args for the job.
          cat requirements.txt | sed '/^torch[>=<\b]/d' | sed '/^torchtext/d' | sed '/^torchvision/d' | sed '/^torchaudio/d' > requirements-temp && mv requirements-temp requirements.txt
          cat requirements_distributed.txt | sed '/^ray[\[]/d'
          pip install torch==2.0.0 torchtext torchvision torchaudio
          pip install ray==2.3.1
          pip install '.[test]'
          pip list
        shell: bash

      - name: Debug out of space -- A
        run: |
          du -h -d 1 ~
          df -h
          # du -s /tmp

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          swap-storage: true

      - name: Integration Tests
        run: |
          RUN_PRIVATE=$IS_NOT_FORK LUDWIG_TEST_SUITE_TIMEOUT_S=7200 pytest -v --timeout 300 --durations 100 -m "not slow and not combinatorial and not horovod and not llm and $MARKERS" --junitxml pytest.xml tests/integration_tests

      - name: Debug out of space -- B
        run: |
          du -h -d 1 ~
          df -h
          # du -s /tmp

  event_file:
    name: "Event File"
    runs-on: ubuntu-latest

    steps:
      - name: Upload
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v2
        with:
          name: Event File
          path: ${{ github.event_path }}
