# This workflow will install Python dependencies and run all tests marked as `slow` on a single Python version.
# The tests will run on a high-memory AWS compute instance to accommodate memory-intensive workloads.

name: pytest (slow)

on:
  pull_request:
    branches: ["master", "release-*"]

jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    if: >
      github.event_name == 'schedule' && github.repository == 'ludwig-ai/ludwig' ||
      github.event_name == 'push' && github.repository == 'ludwig-ai/ludwig' ||
      github.event_name == 'pull_request' && github.event.pull_request.base.repo.full_name == 'ludwig-ai/ludwig' && !github.event.pull_request.head.repo.fork
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2.3.2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-0759580dedc953d1f
          ec2-instance-type: r5.large
          subnet-id: subnet-0983be43
          security-group-id: sg-4cba0d08
          aws-resource-tags: >
            [
              {"Key": "Name", "Value": "ludwig-github-${{ github.head_ref || github.sha }}"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"},
              {"Key": "GitHubHeadRef", "Value": "${{ github.head_ref }}"},
              {"Key": "GitHubSHA", "Value": "${{ github.sha }}"}
            ]

  slow-pytest:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        test-markers: ["slow"]
        python-version: [3.9]
    env:
      MARKERS: ${{ matrix.test-markers }}
      AWS_ACCESS_KEY_ID: ${{ secrets.LUDWIG_TESTS_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.LUDWIG_TESTS_AWS_SECRET_ACCESS_KEY }}
      IS_NOT_FORK: ${{ !(github.event.pull_request.base.repo.full_name == 'ludwig-ai/ludwig' && github.event.pull_request.head.repo.fork) }}
      # TOKENIZERS_PARALLELISM: false

    name: py-slow${{ matrix.python-version  }}
    if: needs.start-runner.result != 'skipped'
    needs: start-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runners

    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Linux
        if: runner.os == 'linux'
        run: |
          sudo apt-get update && sudo apt-get install -y libsndfile1 cmake ccache build-essential g++-8 gcc-8
          cmake --version

      - name: Setup macOS
        if: runner.os == 'macOS'
        run: |
          brew install libuv

      - name: Install dependencies
        run: |
          python --version
          pip --version
          python -m pip install -U pip
          pip install torch==2.1.0 torchtext torchvision torchaudio
          pip install ray==2.3.1
          pip install '.[test]'

          pip list

        shell: bash

      - name: Tests
        run: |
          RUN_PRIVATE=$IS_NOT_FORK LUDWIG_TEST_SUITE_TIMEOUT_S=7200 pytest -v --timeout 600 --durations 100 -m "slow" --junitxml pytest.xml tests/integration_tests/

  stop-runner:
    name: Stop self-hosted EC2 runner

    # required to stop the runner even if the error happened in the previous job
    if: always() && needs.start-runner.result != 'skipped'
    needs:
      - start-runner # required to get output from the start-runner job
      - slow-pytest # required to wait when the main job is done
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2.3.2
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
