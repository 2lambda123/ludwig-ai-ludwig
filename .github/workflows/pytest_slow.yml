# This workflow will install Python dependencies and run all tests marked as `slow` on a single Python version.
# The tests will run on a high-memory AWS compute instance to accommodate memory-intensive workloads.

name: pytest (slow)

on:
  push:
    branches: ["master", "release-*", "slow-pytest-gha"]
  pull_request:
    branches: ["master", "release-*", "slow-pytest-gha"]

jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    if: >
      github.event_name == 'schedule' && github.repository == 'ludwig-ai/ludwig' ||
      github.event_name == 'push' && github.repository == 'ludwig-ai/ludwig' ||
      github.event_name == 'pull_request' && github.event.pull_request.base.repo.full_name == 'ludwig-ai/ludwig' && !github.event.pull_request.head.repo.fork
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2.3.2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-0759580dedc953d1f
          ec2-instance-type: r5.large
          subnet-id: subnet-0983be43
          security-group-id: sg-4cba0d08
          aws-resource-tags: >
            [
              {"Key": "Name", "Value": "ludwig-github-${{ github.head_ref || github.sha }}"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"},
              {"Key": "GitHubHeadRef", "Value": "${{ github.head_ref }}"},
              {"Key": "GitHubSHA", "Value": "${{ github.sha }}"}
            ]

  slow-pytest:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]
        test-markers: ["slow"]
        include:
          - python-version: 3.8
            pytorch-version: 1.13.1
            torchscript-version: 1.10.2
            ray-version: 2.0.0
    env:
      PYTORCH: ${{ matrix.pytorch-version }}
      MARKERS: ${{ matrix.test-markers }}
      TORCHSCRIPT_VERSION: ${{ matrix.torchscript-version }}
      RAY_VERSION: ${{ matrix.ray-version }}

    name: py${{ matrix.python-version  }}, torch-${{ matrix.pytorch-version }}, backend-ray-${{ matrix.ray-version }}
    if: needs.start-runner.result != 'skipped'
    needs: start-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runners

    # we want an ongoing run of this workflow to be canceled by a later commit
    # so that there is only one concurrent run of this workflow for each branch
    concurrency:
      group: pytest-slow-${{ github.head_ref || github.sha }}
      cancel-in-progress: true

    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}m
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Linux
        if: runner.os == 'linux'
        run: |
          sudo apt-get install -y cmake libsndfile1

      - name: Setup macOS
        if: runner.os == 'macOS'
        run: |
          brew install libuv

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-torch${{ matrix.pytorch-version }}-${{ matrix.test-markers }}-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}-torch${{ matrix.pytorch-version }}-${{ matrix.test-markers }}-

      - name: Install dependencies
        env:
          HOROVOD_WITH_PYTORCH: 1
          HOROVOD_WITHOUT_MPI: 1
          HOROVOD_WITHOUT_TENSORFLOW: 1
          HOROVOD_WITHOUT_MXNET: 1
        run: |
          python --version
          pip --version
          python -m pip install -U pip
          cmake --version

          # skip installation of some requirements
          echo > requirements-temp && mv requirements-temp requirements_hyperopt.txt
          echo > requirements-temp && mv requirements-temp requirements_serve.txt
          echo > requirements-temp && mv requirements-temp requirements_viz.txt
          echo > requirements-temp && mv requirements-temp requirements_explain.txt

          extra_index_url=https://download.pytorch.org/whl/cpu
          pip install torch==$PYTORCH torchtext torchvision torchaudio --extra-index-url $extra_index_url
          pip install ray==$RAY_VERSION
          ray_expected=$(python -c "import ray; print(ray.__version__)")
          torch_expected=$(python -c "import torch; print(torch.__version__)")
          pip install '.[test]' --extra-index-url $extra_index_url
          pip list
          python -c "import torch; assert torch.__version__ == \"$torch_expected\", f\"torch {torch.__version__} != $torch_expected\""
          python -c "import ray; assert ray.__version__ == \"$ray_expected\", f\"ray {ray.__version__} != $ray_expected\""
        shell: bash

      - name: Tests
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
        run: |
          pytest -s -v -m "$MARKERS" --junitxml pytest_slow.xml tests/regression_tests/benchmark

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (Python ${{ matrix.python-version }} ${{ matrix.test-markers }})
          path: pytest_slow.xml

  stop-runner:
    name: Stop self-hosted EC2 runner

    # required to stop the runner even if the error happened in the previous job
    if: always() && needs.start-runner.result != 'skipped'
    needs:
      - start-runner # required to get output from the start-runner job
      - slow-pytest  # required to wait when the main job is done
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2.3.2
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
