import yaml

# import pprint
# from ludwig.automl import auto_train
from ludwig.hyperopt.run import hyperopt
from ludwig.datasets import mushroom_edibility
from ludwig.utils.dataset_utils import get_repeatable_train_val_test_split

mushroom_df = mushroom_edibility.load()
mushroom_edibility_df = get_repeatable_train_val_test_split(mushroom_df, "class", random_seed=42)

config = yaml.safe_load(
    """
    {'combiner': {'type': 'tabnet'},
     'hyperopt': {'executor': {'type': 'ray', 'time_budget_s': 120, 'scheduler': {'type': 'async_hyperband'}},
              'goal': 'maximize',
              'metric': 'accuracy',
              'output_feature': 'class',
              'parameters': {'combiner.bn_momentum': {'categories': [0.4,
                                                                     0.3,
                                                                     0.2,
                                                                     0.1,
                                                                     0.05,
                                                                     0.02],
                                                      'space': 'choice'},
                             'combiner.bn_virtual_bs': {'categories': [256,
                                                                       512,
                                                                       1024,
                                                                       2048,
                                                                       4096],
                                                        'space': 'choice'},
                             'combiner.num_steps': {'categories': [3,
                                                                   4,
                                                                   5,
                                                                   6,
                                                                   7,
                                                                   8,
                                                                   9,
                                                                   10],
                                                    'space': 'choice'},
                             'combiner.output_size': {'categories': [8,
                                                                     16,
                                                                     24,
                                                                     32,
                                                                     64,
                                                                     128],
                                                      'space': 'choice'},
                             'combiner.relaxation_factor': {'categories': [1.0,
                                                                           1.2,
                                                                           1.5,
                                                                           2.0],
                                                            'space': 'choice'},
                             'combiner.size': {'categories': [8,
                                                              16,
                                                              24,
                                                              32,
                                                              64],
                                               'space': 'choice'},
                             'combiner.sparsity': {'categories': [0.0,
                                                                  0.0001,
                                                                  0.001,
                                                                  0.01,
                                                                  0.1],
                                                   'space': 'choice'},
                             'trainer.decay_rate': {'categories': [0.8,
                                                                   0.9,
                                                                   0.95],
                                                    'space': 'choice'},
                             'trainer.decay_steps': {'categories': [500,
                                                                    2000,
                                                                    8000,
                                                                    10000,
                                                                    20000],
                                                     'space': 'choice'},
                             'trainer.learning_rate': {'categories': [0.005,
                                                                      0.01,
                                                                      0.02,
                                                                      0.025],
                                                       'space': 'choice'}},
              'search_alg': {'random_state_seed': 42, 'type': 'hyperopt'}},
 'input_features': [{'column': 'cap-shape',
                     'name': 'cap-shape',
                     'type': 'category'},
                    {'column': 'cap-surface',
                     'name': 'cap-surface',
                     'type': 'category'},
                    {'column': 'cap-color',
                     'name': 'cap-color',
                     'type': 'category'},
                    {'column': 'bruises?',
                     'name': 'bruises?',
                     'type': 'binary'},
                    {'column': 'odor', 'name': 'odor', 'type': 'category'},
                    {'column': 'gill-attachment',
                     'name': 'gill-attachment',
                     'type': 'category'},
                    {'column': 'gill-spacing',
                     'name': 'gill-spacing',
                     'type': 'category'},
                    {'column': 'gill-size',
                     'name': 'gill-size',
                     'type': 'category'},
                    {'column': 'gill-color',
                     'name': 'gill-color',
                     'type': 'category'},
                    {'column': 'stalk-shape',
                     'name': 'stalk-shape',
                     'type': 'category'},
                    {'column': 'stalk-root',
                     'name': 'stalk-root',
                     'type': 'category'},
                    {'column': 'stalk-surface-above-ring',
                     'name': 'stalk-surface-above-ring',
                     'type': 'category'},
                    {'column': 'stalk-surface-below-ring',
                     'name': 'stalk-surface-below-ring',
                     'type': 'category'},
                    {'column': 'stalk-color-above-ring',
                     'name': 'stalk-color-above-ring',
                     'type': 'category'},
                    {'column': 'stalk-color-below-ring',
                     'name': 'stalk-color-below-ring',
                     'type': 'category'},
                    {'column': 'veil-color',
                     'name': 'veil-color',
                     'type': 'category'},
                    {'column': 'ring-number',
                     'name': 'ring-number',
                     'type': 'category'},
                    {'column': 'ring-type',
                     'name': 'ring-type',
                     'type': 'category'},
                    {'column': 'spore-print-color',
                     'name': 'spore-print-color',
                     'type': 'category'},
                    {'column': 'population',
                     'name': 'population',
                     'type': 'category'},
                    {'column': 'habitat',
                     'name': 'habitat',
                     'type': 'category'}],
 'output_features': [{'column': 'class', 'name': 'class', 'type': 'category'}],
 'preprocessing': {'split': {'column': 'split', 'type': 'fixed'}},
 'trainer': {'batch_size': 'auto',
             'learning_rate': 0.001,
             'learning_rate_scaling': 'sqrt',
             'learning_rate_scheduler': {'decay': 'exponential',
                                         'decay_rate': 0.8,
                                         'decay_steps': 20000},
             'optimizer': {'type': 'adam'},
             'validation_field': 'class',
             'validation_metric': 'accuracy'}}
    """
)

# pprint.pprint(config)

# auto_train_results = auto_train(
#     dataset=mushroom_edibility_df,
#     target="class",
#     time_limit_s=120,
#     tune_for_memory=False,
#     user_config={"preprocessing": {"split": {"column": "split", "type": "fixed"}}},
# )

# pprint.pprint(auto_train_results)

hyperopt(
    config=config,
    dataset=mushroom_edibility_df,
)
