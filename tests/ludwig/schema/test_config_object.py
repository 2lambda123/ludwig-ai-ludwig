from ludwig.schema.config_object import Config


def test_config_object():
    config = {
        "input_features": [
            {
                "name": "text_feature",
                "type": "text",
                "preprocessing": {
                    "missing_value_strategy": "drop_row",
                },
                "encoder": {
                    "type": "rnn",
                    "bidirectional": True,
                    "representation": "dense",
                    "num_layers": 2,
                },
            },
            {
                "name": "image_feature_1",
                "type": "image",
                "preprocessing": {
                    "height": 7.5,
                    "width": 7.5,
                    "num_channels": 4,
                },
                "encoder": {
                    "type": "resnet",
                    "num_channels": 4,
                    "dropout": 0.1,
                    "resnet_size": 100,
                },
            },
        ],
        "output_features": [
            {
                "name": "category_feature",
                "type": "category",
                "top_k": 3,
                "preprocessing": {
                    "missing_value_strategy": "backfill",
                },
                "decoder": {
                    "type": "classifier",
                    "num_classes": 10,
                    "use_bias": False,
                },
            },
        ],
        "combiner": {
            "type": "concat",
            "output_size": 512,
            "weights_initializer": "xavier_uniform",
            "dropout": 0.2,
        },
        "trainer": {
            "epochs": 50,
            "batch_size": "auto",
            "optimizer": {
                "type": "adam",
                "beta1": 0.8,
                "beta2": 0.999,
                "epsilon": 5e-09,
            },
        },
    }

    config_object = Config(config)
    assert config_object.input_features.text_feature.encoder.type == "rnn"
    assert config_object.input_features.text_feature.encoder.num_layers == 2

    assert config_object.output_features.category_feature.decoder.num_classes == 10
    assert config_object.output_features.category_feature.top_k == 3

    assert config_object.combiner.output_size == 512
    assert config_object.combiner.weights_initializer == "xavier_uniform"
    assert config_object.combiner.fc_layers is None

    assert config_object.trainer.epochs == 50
    assert config_object.trainer.batch_size == "auto"

    assert config_object.trainer.optimizer.type == "adam"
    assert config_object.trainer.optimizer.beta1 == 0.8
    assert config_object.trainer.optimizer.beta2 == 0.999
    assert config_object.trainer.optimizer.epsilon == 5e-09


def test_config_object_defaults():
    config = {
        "input_features": [
            {"name": "number_feature", "type": "number"},
            {
                "name": "text_feature_1",
                "type": "text",
                "encoder": {
                    "type": "rnn",
                    "activation": "sigmoid",
                },
            },
            {
                "name": "text_feature_2",
                "type": "text",
            },
        ],
        "output_features": [
            {
                "name": "number_output_feature",
                "type": "number",
            },
        ],
        "defaults": {
            "number": {"preprocessing": {"missing_value_strategy": "drop_row"}, "encoder": {"type": "dense"}},
            "text": {
                "preprocessing": {
                    "missing_value_strategy": "drop_row",
                },
                "encoder": {
                    "type": "stacked_parallel_cnn",
                    "activation": "tanh",
                },
            },
        },
    }

    config_object = Config(config)
    assert config_object.input_features.number_feature.preprocessing.missing_value_strategy == "drop_row"
    assert config_object.input_features.number_feature.encoder.type == "dense"

    assert config_object.input_features.text_feature_1.encoder.type == "rnn"
    assert config_object.input_features.text_feature_1.encoder.activation == "sigmoid"
    assert config_object.input_features.text_feature_1.preprocessing.missing_value_strategy == "drop_row"

    assert config_object.input_features.text_feature_2.encoder.type == "stacked_parallel_cnn"
    assert config_object.input_features.text_feature_2.encoder.activation == "tanh"
    assert config_object.input_features.text_feature_2.preprocessing.missing_value_strategy == "drop_row"


def test_config_object_to_config_dict():
    config = {
        "input_features": [
            {"name": "number_feature", "type": "number"},
        ],
        "output_features": [
            {
                "name": "number_output_feature",
                "type": "number",
            },
        ],
    }

    config_object = Config(config)
    config_dict = config_object.get_config_dict()

    full_config = {
        "model_type": "ecd",
        "input_features": [
            {
                "name": "number_feature",
                "type": "number",
                "column": "number_feature",
                "proc_column": "number_feature_mZFLky",
                "tied": None,
                "preprocessing": {
                    "missing_value_strategy": "fill_with_const",
                    "fill_value": 0.0,
                    "computed_fill_value": 0.0,
                    "normalization": None,
                },
                "encoder": {"type": "passthrough"},
            }
        ],
        "output_features": [
            {
                "name": "number_output_feature",
                "type": "number",
                "column": "number_output_feature",
                "proc_column": "number_output_feature_mZFLky",
                "reduce_input": "sum",
                "dependencies": [],
                "reduce_dependencies": "sum",
                "input_size": None,
                "num_classes": None,
                "clip": None,
                "decoder": {
                    "type": "regressor",
                    "fc_layers": None,
                    "num_fc_layers": 0,
                    "fc_output_size": 256,
                    "fc_use_bias": True,
                    "fc_weights_initializer": "xavier_uniform",
                    "fc_bias_initializer": "zeros",
                    "fc_norm": None,
                    "fc_norm_params": None,
                    "fc_activation": "relu",
                    "fc_dropout": 0.0,
                    "input_size": None,
                    "use_bias": True,
                    "weights_initializer": "xavier_uniform",
                    "bias_initializer": "zeros",
                },
                "default_validation_metric": "mean_squared_error",
                "loss": {"type": "mean_squared_error", "weight": 1.0},
                "preprocessing": {
                    "missing_value_strategy": "fill_with_const",
                    "fill_value": 0.0,
                    "computed_fill_value": 0.0,
                    "normalization": None,
                },
            }
        ],
        "combiner": {
            "type": "concat",
            "fc_layers": None,
            "num_fc_layers": 0,
            "output_size": 256,
            "use_bias": True,
            "weights_initializer": "xavier_uniform",
            "bias_initializer": "zeros",
            "norm": None,
            "norm_params": None,
            "activation": "relu",
            "dropout": 0.0,
            "flatten_inputs": False,
            "residual": False,
        },
        "trainer": {
            "type": "trainer",
            "learning_rate": 0.001,
            "validation_metric": "loss",
            "validation_field": "combined",
            "eval_batch_size": None,
            "early_stop": 5,
            "evaluate_training_set": True,
            "optimizer": {
                "type": "adam",
                "lr": 0.001,
                "betas": (0.9, 0.999),
                "eps": 1e-08,
                "weight_decay": 0.0,
                "amsgrad": False,
            },
            "epochs": 100,
            "train_steps": None,
            "regularization_lambda": 0.0,
            "regularization_type": "l2",
            "should_shuffle": True,
            "batch_size": 128,
            "steps_per_checkpoint": 0,
            "checkpoints_per_epoch": 0,
            "reduce_learning_rate_on_plateau": 0.0,
            "reduce_learning_rate_on_plateau_patience": 5,
            "reduce_learning_rate_on_plateau_rate": 0.5,
            "reduce_learning_rate_eval_metric": "loss",
            "reduce_learning_rate_eval_split": "training",
            "increase_batch_size_on_plateau": 0,
            "increase_batch_size_on_plateau_patience": 5,
            "increase_batch_size_on_plateau_rate": 2.0,
            "increase_batch_size_on_plateau_max": 512,
            "increase_batch_size_eval_metric": "loss",
            "increase_batch_size_eval_split": "training",
            "decay": False,
            "decay_steps": 10000,
            "decay_rate": 0.96,
            "staircase": False,
            "gradient_clipping": {"clipglobalnorm": 0.5, "clipnorm": None, "clipvalue": None},
            "learning_rate_warmup_epochs": 1.0,
            "learning_rate_scaling": "linear",
        },
        "preprocessing": {
            "split": {"type": "random", "probabilities": [0.7, 0.1, 0.2]},
            "sample_ratio": 1.0,
            "oversample_minority": None,
            "undersample_majority": None,
        },
        "hyperopt": {},
        "defaults": {
            "audio": {
                "name": None,
                "type": "audio",
                "column": None,
                "proc_column": None,
                "tied": None,
                "preprocessing": {
                    "audio_file_length_limit_in_s": 7.5,
                    "missing_value_strategy": "bfill",
                    "fill_value": None,
                    "computed_fill_value": None,
                    "in_memory": True,
                    "padding_value": 0.0,
                    "norm": None,
                    "type": "fbank",
                    "window_length_in_s": 0.04,
                    "window_shift_in_s": 0.02,
                    "num_fft_points": None,
                    "window_type": "hamming",
                    "num_filter_bands": 80,
                },
                "encoder": {
                    "type": "parallel_cnn",
                    "should_embed": True,
                    "vocab": None,
                    "representation": "dense",
                    "embedding_size": 256,
                    "max_sequence_length": None,
                    "embeddings_trainable": True,
                    "pretrained_embeddings": None,
                    "embeddings_on_cpu": False,
                    "conv_layers": None,
                    "num_conv_layers": None,
                    "filter_size": 3,
                    "num_filters": 256,
                    "pool_function": "max",
                    "pool_size": None,
                    "fc_layers": None,
                    "num_fc_layers": None,
                    "output_size": 256,
                    "use_bias": True,
                    "weights_initializer": "xavier_uniform",
                    "bias_initializer": "zeros",
                    "norm": None,
                    "norm_params": None,
                    "activation": "relu",
                    "dropout": 0.0,
                    "reduce_output": "sum",
                },
            },
            "binary": {
                "name": None,
                "type": "binary",
                "column": None,
                "proc_column": None,
                "tied": None,
                "preprocessing": {
                    "missing_value_strategy": "fill_with_false",
                    "fill_value": None,
                    "computed_fill_value": None,
                    "fallback_true_label": None,
                },
                "encoder": {"type": "passthrough"},
                "reduce_input": "sum",
                "loss": {
                    "type": "binary_weighted_cross_entropy",
                    "weight": 1.0,
                    "positive_class_weight": None,
                    "robust_lambda": 0,
                    "confidence_penalty": 0,
                },
                "threshold": 0.5,
                "dependencies": [],
                "calibration": False,
                "default_validation_metric": "roc_auc",
                "reduce_dependencies": "sum",
                "num_classes": None,
                "input_size": None,
                "decoder": {
                    "type": "regressor",
                    "fc_layers": None,
                    "num_fc_layers": 0,
                    "fc_output_size": 256,
                    "fc_use_bias": True,
                    "fc_weights_initializer": "xavier_uniform",
                    "fc_bias_initializer": "zeros",
                    "fc_norm": None,
                    "fc_norm_params": None,
                    "fc_activation": "relu",
                    "fc_dropout": 0.0,
                    "input_size": None,
                    "use_bias": True,
                    "weights_initializer": "xavier_uniform",
                    "bias_initializer": "zeros",
                },
            },
            "category": {
                "name": None,
                "type": "category",
                "column": None,
                "proc_column": None,
                "tied": None,
                "preprocessing": {
                    "missing_value_strategy": "fill_with_const",
                    "fill_value": "<UNK>",
                    "computed_fill_value": "<UNK>",
                    "lowercase": False,
                    "most_common": 10000,
                },
                "encoder": {
                    "type": "dense",
                    "vocab": None,
                    "embedding_size": 50,
                    "embeddings_trainable": True,
                    "pretrained_embeddings": None,
                    "embeddings_on_cpu": False,
                    "dropout": 0.0,
                    "embedding_initializer": None,
                },
                "reduce_input": "sum",
                "loss": {
                    "type": "softmax_cross_entropy",
                    "weight": 1.0,
                    "class_weights": None,
                    "robust_lambda": 0,
                    "confidence_penalty": 0,
                    "class_similarities": None,
                    "class_similarities_temperature": 0,
                },
                "dependencies": [],
                "calibration": False,
                "default_validation_metric": "accuracy",
                "reduce_dependencies": "sum",
                "num_classes": None,
                "top_k": 3,
                "input_size": None,
                "decoder": {
                    "type": "classifier",
                    "fc_layers": None,
                    "num_fc_layers": 0,
                    "fc_output_size": 256,
                    "fc_use_bias": True,
                    "fc_weights_initializer": "xavier_uniform",
                    "fc_bias_initializer": "zeros",
                    "fc_norm": None,
                    "fc_norm_params": None,
                    "fc_activation": "relu",
                    "fc_dropout": 0.0,
                    "input_size": None,
                    "num_classes": None,
                    "use_bias": True,
                    "weights_initializer": "xavier_uniform",
                    "bias_initializer": "zeros",
                },
            },
            "date": {
                "name": None,
                "type": "date",
                "column": None,
                "proc_column": None,
                "tied": None,
                "preprocessing": {
                    "missing_value_strategy": "fill_with_const",
                    "fill_value": "",
                    "computed_fill_value": "",
                    "datetime_format": None,
                },
                "encoder": {
                    "type": "embed",
                    "embedding_size": 10,
                    "embeddings_on_cpu": False,
                    "fc_layers": None,
                    "num_fc_layers": 0,
                    "output_size": 10,
                    "use_bias": True,
                    "weights_initializer": "xavier_uniform",
                    "bias_initializer": "zeros",
                    "norm": None,
                    "norm_params": None,
                    "activation": "relu",
                    "dropout": 0.0,
                },
            },
            "h3": {
                "name": None,
                "type": "h3",
                "column": None,
                "proc_column": None,
                "tied": None,
                "preprocessing": {
                    "missing_value_strategy": "fill_with_const",
                    "fill_value": 576495936675512319,
                    "computed_fill_value": 576495936675512319,
                },
                "encoder": {
                    "type": "embed",
                    "embedding_size": 10,
                    "embeddings_on_cpu": False,
                    "fc_layers": None,
                    "num_fc_layers": 0,
                    "output_size": 10,
                    "use_bias": True,
                    "weights_initializer": "xavier_uniform",
                    "bias_initializer": "zeros",
                    "norm": None,
                    "norm_params": None,
                    "activation": "relu",
                    "dropout": 0.0,
                    "reduce_output": "sum",
                },
            },
            "image": {
                "name": None,
                "type": "image",
                "column": None,
                "proc_column": None,
                "tied": None,
                "preprocessing": {
                    "missing_value_strategy": "bfill",
                    "fill_value": None,
                    "computed_fill_value": None,
                    "height": None,
                    "width": None,
                    "num_channels": None,
                    "resize_method": "interpolate",
                    "infer_image_num_channels": True,
                    "infer_image_dimensions": True,
                    "infer_image_max_height": 256,
                    "infer_image_max_width": 256,
                    "infer_image_sample_size": 100,
                    "scaling": "pixel_normalization",
                    "in_memory": True,
                    "num_processes": 1,
                },
                "encoder": {
                    "type": "stacked_cnn",
                    "height": None,
                    "width": None,
                    "conv_layers": None,
                    "num_conv_layers": None,
                    "num_channels": None,
                    "out_channels": 32,
                    "kernel_size": 3,
                    "stride": 1,
                    "padding": "valid",
                    "dilation": 1,
                    "groups": 1,
                    "conv_use_bias": True,
                    "padding_mode": "zeros",
                    "conv_norm": None,
                    "conv_norm_params": None,
                    "conv_activation": "relu",
                    "conv_dropout": 0.0,
                    "pool_function": "max",
                    "pool_kernel_size": 2,
                    "pool_stride": None,
                    "pool_padding": 0,
                    "pool_dilation": 1,
                    "fc_layers": None,
                    "num_fc_layers": 1,
                    "output_size": 128,
                    "fc_use_bias": True,
                    "fc_weights_initializer": "xavier_uniform",
                    "fc_bias_initializer": "zeros",
                    "fc_norm": None,
                    "fc_norm_params": None,
                    "fc_activation": "relu",
                    "fc_dropout": 0.0,
                },
            },
            "number": {
                "name": None,
                "type": "number",
                "column": None,
                "proc_column": None,
                "tied": None,
                "preprocessing": {
                    "missing_value_strategy": "fill_with_const",
                    "fill_value": 0.0,
                    "computed_fill_value": 0.0,
                    "normalization": None,
                },
                "encoder": {"type": "passthrough"},
                "reduce_input": "sum",
                "loss": {"type": "mean_squared_error", "weight": 1.0},
                "clip": None,
                "dependencies": [],
                "default_validation_metric": "mean_squared_error",
                "reduce_dependencies": "sum",
                "num_classes": None,
                "input_size": None,
                "decoder": {
                    "type": "regressor",
                    "fc_layers": None,
                    "num_fc_layers": 0,
                    "fc_output_size": 256,
                    "fc_use_bias": True,
                    "fc_weights_initializer": "xavier_uniform",
                    "fc_bias_initializer": "zeros",
                    "fc_norm": None,
                    "fc_norm_params": None,
                    "fc_activation": "relu",
                    "fc_dropout": 0.0,
                    "input_size": None,
                    "use_bias": True,
                    "weights_initializer": "xavier_uniform",
                    "bias_initializer": "zeros",
                },
            },
            "sequence": {
                "name": None,
                "type": "sequence",
                "column": None,
                "proc_column": None,
                "tied": None,
                "preprocessing": {
                    "tokenizer": "space",
                    "vocab_file": None,
                    "max_sequence_length": 256,
                    "most_common": 20000,
                    "padding_symbol": "<PAD>",
                    "unknown_symbol": "<UNK>",
                    "padding": "right",
                    "lowercase": False,
                    "missing_value_strategy": "fill_with_const",
                    "fill_value": "<UNK>",
                    "computed_fill_value": "<UNK>",
                },
                "encoder": {
                    "type": "embed",
                    "vocab": None,
                    "max_sequence_length": None,
                    "representation": "dense",
                    "embedding_size": 256,
                    "embeddings_trainable": True,
                    "pretrained_embeddings": None,
                    "embeddings_on_cpu": False,
                    "dropout": 0.0,
                    "weights_initializer": "uniform",
                    "reduce_output": "sum",
                },
                "reduce_input": "sum",
                "loss": {
                    "type": "sequence_softmax_cross_entropy",
                    "weight": 1.0,
                    "class_weights": None,
                    "robust_lambda": 0,
                    "confidence_penalty": 0,
                    "class_similarities": None,
                    "class_similarities_temperature": 0,
                    "unique": False,
                },
                "dependencies": [],
                "default_validation_metric": "loss",
                "reduce_dependencies": "sum",
                "num_classes": None,
                "input_size": None,
                "decoder": {
                    "type": "generator",
                    "fc_layers": None,
                    "num_fc_layers": 0,
                    "fc_output_size": 256,
                    "fc_use_bias": True,
                    "fc_weights_initializer": "xavier_uniform",
                    "fc_bias_initializer": "zeros",
                    "fc_norm": None,
                    "fc_norm_params": None,
                    "fc_activation": "relu",
                    "fc_dropout": 0.0,
                    "vocab_size": None,
                    "max_sequence_length": None,
                    "cell_type": "gru",
                    "input_size": 256,
                    "reduce_input": "sum",
                    "num_layers": 1,
                },
            },
            "set": {
                "name": None,
                "type": "set",
                "column": None,
                "proc_column": None,
                "tied": None,
                "preprocessing": {
                    "tokenizer": "space",
                    "missing_value_strategy": "fill_with_const",
                    "fill_value": "<UNK>",
                    "computed_fill_value": "<UNK>",
                    "lowercase": False,
                    "most_common": 10000,
                },
                "encoder": {
                    "type": "embed",
                    "vocab": None,
                    "representation": "dense",
                    "embedding_size": 50,
                    "embeddings_trainable": True,
                    "pretrained_embeddings": None,
                    "embeddings_on_cpu": False,
                    "fc_layers": None,
                    "num_fc_layers": 0,
                    "output_size": 10,
                    "use_bias": True,
                    "weights_initializer": "xavier_uniform",
                    "bias_initializer": "zeros",
                    "norm": None,
                    "norm_params": None,
                    "activation": "relu",
                    "dropout": 0.0,
                },
                "reduce_input": "sum",
                "loss": {"type": "sigmoid_cross_entropy", "weight": 1.0, "class_weights": None},
                "threshold": 0.5,
                "dependencies": [],
                "default_validation_metric": "jaccard",
                "reduce_dependencies": "sum",
                "num_classes": None,
                "input_size": None,
                "decoder": {
                    "type": "classifier",
                    "fc_layers": None,
                    "num_fc_layers": 0,
                    "fc_output_size": 256,
                    "fc_use_bias": True,
                    "fc_weights_initializer": "xavier_uniform",
                    "fc_bias_initializer": "zeros",
                    "fc_norm": None,
                    "fc_norm_params": None,
                    "fc_activation": "relu",
                    "fc_dropout": 0.0,
                    "input_size": None,
                    "num_classes": None,
                    "use_bias": True,
                    "weights_initializer": "xavier_uniform",
                    "bias_initializer": "zeros",
                },
            },
            "text": {
                "name": None,
                "type": "text",
                "column": None,
                "proc_column": None,
                "tied": None,
                "preprocessing": {
                    "pretrained_model_name_or_path": None,
                    "tokenizer": "space_punct",
                    "vocab_file": None,
                    "max_sequence_length": 256,
                    "most_common": 20000,
                    "padding_symbol": "<PAD>",
                    "unknown_symbol": "<UNK>",
                    "padding": "right",
                    "lowercase": True,
                    "missing_value_strategy": "fill_with_const",
                    "fill_value": "<UNK>",
                    "computed_fill_value": "<UNK>",
                },
                "encoder": {
                    "type": "parallel_cnn",
                    "should_embed": True,
                    "vocab": None,
                    "representation": "dense",
                    "embedding_size": 256,
                    "max_sequence_length": None,
                    "embeddings_trainable": True,
                    "pretrained_embeddings": None,
                    "embeddings_on_cpu": False,
                    "conv_layers": None,
                    "num_conv_layers": None,
                    "filter_size": 3,
                    "num_filters": 256,
                    "pool_function": "max",
                    "pool_size": None,
                    "fc_layers": None,
                    "num_fc_layers": None,
                    "output_size": 256,
                    "use_bias": True,
                    "weights_initializer": "xavier_uniform",
                    "bias_initializer": "zeros",
                    "norm": None,
                    "norm_params": None,
                    "activation": "relu",
                    "dropout": 0.0,
                    "reduce_output": "sum",
                },
                "reduce_input": "sum",
                "class_similarities": None,
                "loss": {
                    "type": "sequence_softmax_cross_entropy",
                    "weight": 1.0,
                    "class_weights": None,
                    "robust_lambda": 0,
                    "confidence_penalty": 0,
                    "class_similarities": None,
                    "class_similarities_temperature": 0,
                    "unique": False,
                },
                "dependencies": [],
                "default_validation_metric": "loss",
                "reduce_dependencies": "sum",
                "num_classes": None,
                "input_size": None,
                "decoder": {
                    "type": "generator",
                    "fc_layers": None,
                    "num_fc_layers": 0,
                    "fc_output_size": 256,
                    "fc_use_bias": True,
                    "fc_weights_initializer": "xavier_uniform",
                    "fc_bias_initializer": "zeros",
                    "fc_norm": None,
                    "fc_norm_params": None,
                    "fc_activation": "relu",
                    "fc_dropout": 0.0,
                    "vocab_size": None,
                    "max_sequence_length": None,
                    "cell_type": "gru",
                    "input_size": 256,
                    "reduce_input": "sum",
                    "num_layers": 1,
                },
            },
            "timeseries": {
                "name": None,
                "type": "timeseries",
                "column": None,
                "proc_column": None,
                "tied": None,
                "preprocessing": {
                    "tokenizer": "space",
                    "timeseries_length_limit": 256,
                    "padding_value": 0.0,
                    "padding": "right",
                    "missing_value_strategy": "fill_with_const",
                    "fill_value": "",
                    "computed_fill_value": "",
                },
                "encoder": {
                    "type": "parallel_cnn",
                    "should_embed": True,
                    "vocab": None,
                    "representation": "dense",
                    "embedding_size": 256,
                    "max_sequence_length": None,
                    "embeddings_trainable": True,
                    "pretrained_embeddings": None,
                    "embeddings_on_cpu": False,
                    "conv_layers": None,
                    "num_conv_layers": None,
                    "filter_size": 3,
                    "num_filters": 256,
                    "pool_function": "max",
                    "pool_size": None,
                    "fc_layers": None,
                    "num_fc_layers": None,
                    "output_size": 256,
                    "use_bias": True,
                    "weights_initializer": "xavier_uniform",
                    "bias_initializer": "zeros",
                    "norm": None,
                    "norm_params": None,
                    "activation": "relu",
                    "dropout": 0.0,
                    "reduce_output": "sum",
                },
            },
            "vector": {
                "name": None,
                "type": "vector",
                "column": None,
                "proc_column": None,
                "tied": None,
                "preprocessing": {
                    "vector_size": None,
                    "missing_value_strategy": "fill_with_const",
                    "fill_value": "",
                    "computed_fill_value": "",
                },
                "encoder": {
                    "type": "dense",
                    "input_size": None,
                    "fc_layers": None,
                    "num_layers": 1,
                    "output_size": 256,
                    "use_bias": True,
                    "weights_initializer": "xavier_uniform",
                    "bias_initializer": "zeros",
                    "norm": None,
                    "norm_params": None,
                    "activation": "relu",
                    "dropout": 0.0,
                },
                "reduce_input": None,
                "vector_size": None,
                "loss": {"type": "mean_squared_error", "weight": 1.0},
                "dependencies": [],
                "default_validation_metric": "mean_squared_error",
                "reduce_dependencies": None,
                "num_classes": None,
                "input_size": None,
                "decoder": {
                    "type": "projector",
                    "fc_layers": None,
                    "num_fc_layers": 0,
                    "fc_output_size": 256,
                    "fc_use_bias": True,
                    "fc_weights_initializer": "xavier_uniform",
                    "fc_bias_initializer": "zeros",
                    "fc_norm": None,
                    "fc_norm_params": None,
                    "fc_activation": "relu",
                    "fc_dropout": 0.0,
                    "input_size": None,
                    "output_size": None,
                    "use_bias": True,
                    "weights_initializer": "xavier_uniform",
                    "bias_initializer": "zeros",
                    "activation": None,
                    "clip": None,
                },
                "softmax": False,
            },
        },
    }

    assert config_dict == full_config


def test_config_object_gbm():
    pass
